"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[395],{1198:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"type":"mdx","permalink":"/Inputter/","source":"@site/pages/index.md","title":"Inputter","description":"License: MIT CI","frontMatter":{},"unlisted":false}');var s=t(4848),l=t(8453);const r={},a="Inputter",o={},c=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Using Wally",id:"using-wally",level:3},{value:"Manual Installation",id:"manual-installation",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Why Inputter?",id:"why-inputter",level:2},{value:"Contributing",id:"contributing",level:2},{value:"License",id:"license",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"inputter",children:"Inputter"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://choosealicense.com/licenses/mit/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/License-MIT-yellow.svg",alt:"License: MIT"})})," ",(0,s.jsx)(n.a,{href:"https://github.com/AdamMillsy/Inputter/actions/workflows/ci.yaml",children:(0,s.jsx)(n.img,{src:"https://github.com/AdamMillsy/Inputter/actions/workflows/ci.yaml/badge.svg",alt:"CI"})})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Inputter"})," is a fully-typed, cross-platform ROBLOX input manager for clean and efficient input handling across PC, mobile, and console devices."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cross-platform support (PC, Console, Mobile)"}),"\n",(0,s.jsx)(n.li,{children:"Typed input configuration"}),"\n",(0,s.jsx)(n.li,{children:"Easy integration with existing systems"}),"\n",(0,s.jsx)(n.li,{children:"Supports multiple simultaneous inputs"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.h3,{id:"using-wally",children:"Using Wally"}),"\n",(0,s.jsxs)(n.p,{children:["Add the following line to your ",(0,s.jsx)(n.code,{children:"wally.toml"})," dependencies:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'Inputter = "adammillsy/inputter@0.0.1"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Then run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"wally install\n"})}),"\n",(0,s.jsx)(n.h3,{id:"manual-installation",children:"Manual Installation"}),"\n",(0,s.jsxs)(n.p,{children:["Download a ZIP file of the module from the ",(0,s.jsx)(n.a,{href:"https://github.com/AdamMillsy/Inputter",children:"GitHub repository"}),", and copy the code into your project."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsx)(n.p,{children:"Require the module in your project:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"local Inputter = require(Path.To.Inputter)\n"})}),"\n",(0,s.jsx)(n.p,{children:"The following example creates a new inputter that responds to both mouse and gamepad input:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'local exampleInput = Inputter.new("ExampleInput", {\n    Inputter.Trigger.PRESS({\n        Input = Enum.KeyCode.ButtonR2,\n    }),\n    Inputter.Trigger.MULTIPLE_PRESS({\n        Input = Enum.UserInputType.MouseButton1,\n    }, 2, 0.3),\n})\n\nexampleInput.OnActivated:Connect(function()\n    print("Activated")\nend)\n\nexampleInput.OnDeactivated:Connect(function()\n    print("Deactivated")\nend)\n'})}),"\n",(0,s.jsx)(n.p,{children:"Inputter automatically handles platform-specific input logic under the hood."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,s.jsxs)(n.p,{children:["To view the documentation, please go to ",(0,s.jsx)(n.a,{href:"https://adammillsy.github.io/Inputter/",children:"this page"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"why-inputter",children:"Why Inputter?"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"UserInputService"})," is excellent, however most games focus on one platform before expanding to others. Inputter makes it easy to add and remove input methods, removing the complexity that the default methods provide."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,s.jsx)(n.p,{children:"Issues and PRs are welcome!"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,s.jsxs)(n.p,{children:["This project is licensed under the ",(0,s.jsx)(n.a,{href:"https://choosealicense.com/licenses/mit/",children:"MIT License"})," and maintained by ",(0,s.jsx)(n.strong,{children:"Adam Mills"}),"."]}),"\n",(0,s.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const s={},l=i.createContext(s);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);